[プログラムの説明]

 演習１
 概要 : 8個の図形の中でいくつかを出力するプログラムである。
 構成 : 最初に出力する図形の個数を入力する。あと各図形に必要なオプションを入力して最後にまとめて出力する。
 細部 : Pointは教科書を参考にしているため個数を入力せずに一個だけ出力する。四角形の場合は用語は異なっているが、統一性のためにlength=widthとみなして以後のcase分でheightをまた入力する形式である。

 演習2
 概要 : プレイヤーとランダム性を持つコンピューターがジャンケンするプログラムである。
 構成 : プレイヤーの名前を入力してからジャンケンの三つの中で一つを選ぶと、コンピューターがランダムに生成した手と比較して勝負を判定する。
 細部 : コンピューターが出す手はコンピューターのジャンケンメソッドを実行した時点でしか決定されないように作成した。また、プレイヤー手の入力はテスタークラスではなくプレイヤーのジャンケンメソッドを用いてだけ入力する。

 課題
 概要 : 係数及び定数を入力した三つの方程式の解を求めるプログラムである。
 構成 : 1次方程式、2次方程式、sin関数の式を識別名と係数などを引数として生成して、求められる解の形を全て確認している。出力の書式は画像の形式を用いた。
 細部 : 解を求める際には一般に使われる数学の公式を用いた。sin値は内蔵のasin()関数で求めて、角度は360/2*PIの形で求めた。2次方程式の解は少し出力が設定されていて、判別式の符号によって求める解や形が異なる。判別式が陽の場合は二つの解を直接公式から求めて、0の場合はその中で一つだけ出力する。しかし判別式が陰の場合には実数部と虚数部に分けて求め、実数部＋虚数部の書式で出力する際虚数部に符号やiを付けるなどで二つの解を出力している。小数点の有効数字をsin関数では特に制限せず、他の方程式では3桁に制限している。これによって出力される解が実際の解とは異なるかも知れないが、ほぼ等しい値であると仮定している。

[まとめ]
 抽象クラスの使い方を練習した。抽象クラスで宣言された変数やクラスなどを派生クラスでOVERRIDEを強制する性質から、類似な性質を持つクラス達のルートとして抽象クラスを宣言することで体系的な関係が作られる。インスタンスの生成はできず相続させるだけの機能であるが、規格を提案する意味として見るとその抽象クラスを使う人に負担を軽減する役割を果たせると考えられる。この課題では使っていないがJAVADOCを使うことでクラスの文書化ができることは非常に楽になれることであり、定型化てきな面で見ると誰が作成したコードでもJAVADOCを使うと同じ書式で見られることが統一性があって良いと考える。

[理解度]
 a

[感想]
 演習1で8個のcase文に分かれていますが、これでcase文が多いと言えますか。また、課題の二次方程式コードに出るimport java.lang.reflect.Constructorの意味を検索してみましたが、どんな場合に使われるのか気になります。

[特記事項]
 特にありません。